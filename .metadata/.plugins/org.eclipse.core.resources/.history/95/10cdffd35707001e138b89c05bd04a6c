package com.exercise.exer.question;

import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
//import ch.qos.logback.core.model.Model; 이 모델 임포트 사용하면 안돼고 위에 있는 모델 임포트를 사용!!
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.exercise.exer.answer.AnswerForm;

import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;

//http://localhost:8082/question/list

@RequestMapping("/question")
@RequiredArgsConstructor // questionRepository의 필드에 대한 생성자를 생성한다.
@Controller
public class QuestionController {

	private final QuestionService questionService;

	  @GetMapping("/list")
	    public String list(Model model, @RequestParam(value="page", defaultValue="0") int page) {
	        Page<Question> paging = this.questionService.getList(page);
	        model.addAttribute("paging", paging);
	        return "question_list";
	    }

	// @PathVariable 이거는 그러면 URL에 있는 id값을 매개변수로 받는다
	// Integer id는 @PathVariable("id")로부터 전달받은 값인 경로 변수의 값을 저장하는 변수
	// Integer id에 저장하여 메서드 내에서 사용
	// question_list에서 요청이 들어옴

	@GetMapping(value = "/detail/{id}")
	public String detail(Model model, @PathVariable("id") Integer id,  AnswerForm answerForm) {
		// QuestionService 에 있는 Question
		Question question = this.questionService.getQuestion(id);
		model.addAttribute("question", question);
		return "question_detail";

	}

	// question_form에서 온 정보 처리
	@PostMapping("/create")
    public String questionCreate(@Valid QuestionForm questionForm, BindingResult bindingResult) {
        if (bindingResult.hasErrors()) {
            return "question_form";
        }
        this.questionService.create(questionForm.getSubject(), questionForm.getContent());
        return "redirect:/question/list";
    }

    @GetMapping("/create")
    public String questionCreate(QuestionForm questionForm) {
        return "question_form";
    }
}
